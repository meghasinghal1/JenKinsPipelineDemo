pipeline {
    agent any

    stages {
        stage('Initialize') {
            steps {
                script {
                    // Define the reusable function to run PowerShell commands
                    env.runPowerShell = { command ->
                        try {
                            // Attempt to use PowerShell Core (pwsh)
                            pwsh command
                        } catch (Exception e) {
                            // If pwsh fails, use Windows PowerShell
                            echo "Failed to run pwsh: ${e.message}, falling back to Windows PowerShell."
                            powershell command
                        }
                    }
                }
            }
        }

        stage('zipRepo') {
            steps {
                script {
                    // Call the common function with the desired command
                    powershell '''
                        Write-Output "Zipping completed successfully!" | Out-Host
                    '''
                }
            }
        }

        stage('uploadZip') {
            steps {
                script {
                    // Call the common function with the desired command
                    powershell '''
                        Write-Output "Uploading completed successfully!" | Out-Host
                    '''
                }
            }
        }
    }
}
